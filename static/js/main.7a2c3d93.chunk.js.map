{"version":3,"sources":["logo.svg","Survey.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Survey","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","answers","answer1","answer2","answer3","isSubmitted","nameSubmitted","bind","assertThisInitialized","answered","submitted","event","refs","value","setState","target","document","getElementById","style","textDecoration","$","css","fadeTo","cardNo","labelNo","reloadNo","answer","prop","console","log","studentName","questions","react_default","a","createElement","onSubmit","type","ref","placeholder","className","id","onClick","reload","onChange","class","Component","App","src_Survey","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a2c3d93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport $ from 'jquery'\r\n\r\nclass Survey extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.state= {\r\n      name : \"\",\r\n      answers : {\r\n        answer1 : \"\",\r\n        answer2 : \"\",\r\n        answer3 : \"\"\r\n      },\r\n      isSubmitted : false\r\n    }\r\n    \r\n    this.nameSubmitted = this.nameSubmitted.bind(this);\r\n    this.answered = this.answered.bind(this);\r\n    this.submitted = this.submitted.bind(this);\r\n  }\r\n  \r\n  nameSubmitted(event){\r\n    var name = this.refs.name.value;\r\n    this.setState({name : name})\r\n    \r\n  }\r\n  \r\n  answered(event){\r\n    var answers = this.state.answers;\r\n    if(event.target.name==='answer1'){\r\n      answers.answer1 = event.target.value;\r\n      document.getElementById('label1').style.textDecoration = \"line-through\";\r\n      \r\n      $('.card1').css(\"pointerEvents\", \"none\");\r\n      $('.card1').fadeTo(\"1000\", \"0.4\");\r\n\r\n      $('#reload1').css('display','block');\r\n      $('#reload1').css('pointerEvents','auto');\r\n      \r\n    }else if(event.target.name==='answer2'){\r\n\r\n      answers.answer2 = event.target.value;\r\n      document.getElementById('label2').style.textDecoration = \"line-through\";\r\n      \r\n      $('.card2').css(\"pointerEvents\", \"none\");\r\n      $('.card2').fadeTo(\"1000\", \"0.4\");\r\n\r\n      $('#reload2').css('display','block');\r\n      $('#reload2').css('pointerEvents','auto');\r\n\r\n    }else if(event.target.name==='answer3'){\r\n      \r\n      answers.answer3 = event.target.value;\r\n\r\n      document.getElementById('label3').style.textDecoration = \"line-through\";\r\n      \r\n      $('.card3').css(\"pointerEvents\", \"none\");\r\n      $('.card3').fadeTo(\"1000\", \"0.4\");\r\n\r\n      $('#reload3').css('display','block');\r\n      $('#reload3').css('pointerEvents','auto');\r\n    }\r\n    \r\n    $('.reload').css('opacity','1');\r\n    this.setState({answers : answers});    \r\n  }\r\n  \r\n  submitted(){\r\n    this.setState({isSubmitted : true});\r\n  }\r\n\r\n  reload(cardNo, labelNo, reloadNo, answer){\r\n\r\n    $(\"input:radio[name=\"+answer+\"]\").prop('checked',false);\r\n\r\n    var answers = this.state.answers;\r\n\r\n    if(answer === 'answer1'){\r\n      answers.answer1 = \"\";  \r\n    } else if(answer === 'answer2'){\r\n      answers.answer2 = \"\";  \r\n    } else if(answer === 'answer3'){\r\n      answers.answer3 = \"\";  \r\n    }\r\n    \r\n    this.setState({answers : answers});\r\n    console.log(this.state)\r\n    \r\n    $('.'+cardNo).css('pointerEvents','auto');\r\n    $('.'+cardNo).fadeTo(\"1000\", \"1\");\r\n\r\n    $('#'+labelNo).css('textDecoration', 'none');\r\n\r\n    $('#'+reloadNo).css('display', 'none');\r\n  }\r\n  \r\n  render(){\r\n    var studentName;\r\n    var questions;\r\n    \r\n    if(this.state.name === \"\"){\r\n      studentName = \r\n        <div>\r\n          <form onSubmit={this.nameSubmitted}>\r\n            <div><input type=\"text\" ref=\"name\" placeholder=\"Enter your name\"/></div>\r\n          </form>\r\n        </div>\r\n    \r\n    } else if(this.state.name != \"\" && this.state.isSubmitted === false){\r\n      \r\n      studentName = \r\n        <div>\r\n          <h1>Hello {this.state.name}, welcome to Survey!!!!</h1>\r\n        </div>\r\n      \r\n      questions = \r\n        \r\n        <div>\r\n          <form onSubmit={this.submitted}>\r\n            \r\n            <div className =\"card card1\">\r\n              <label id='label1'><p onClick={this.reload.bind(this, 'card1', 'label1', 'reload1', 'answer1')} className=\"reload\" id=\"reload1\">&#x21bb;</p>What is your fvr8 color</label><br/><br/>\r\n              <input type=\"radio\" name=\"answer1\" value=\"red\" onChange={this.answered}/>Red&nbsp;&nbsp;\r\n              <input type=\"radio\" name=\"answer1\" value=\"blue\" onChange={this.answered}/>Blue&nbsp;&nbsp;\r\n              <input type=\"radio\" name=\"answer1\" value=\"Orange\" onChange={this.answered}/>Orange&nbsp;&nbsp;\r\n            </div>\r\n            \r\n            <div class =\"card card2\">\r\n              <label id='label2'><p onClick={this.reload.bind(this, 'card2', 'label2', 'reload2', 'answer2')} className=\"reload\" id=\"reload2\">&#x21bb;</p>What is your fvr8 car</label><br/><br/>\r\n              <input type=\"radio\" name=\"answer2\" value=\"Audi\" onChange={this.answered}/>Audi&nbsp;&nbsp;\r\n              <input type=\"radio\" name=\"answer2\" value=\"Mercedes\" onChange={this.answered}/>Mercedes&nbsp;&nbsp;\r\n              <input type=\"radio\" name=\"answer2\" value=\"Ferari\" onChange={this.answered}/>Ferari&nbsp;&nbsp;\r\n            </div>\r\n            \r\n            <div class =\"card card3\">\r\n              <label id='label3'><p onClick={this.reload.bind(this, 'card3', 'label3', 'reload3', 'answer3')} className=\"reload\" id=\"reload3\">&#x21bb;</p>What is your fvr8 sports</label><br/><br/>\r\n              <input type=\"radio\" name=\"answer3\" value=\"Cricket\" onChange={this.answered}/>Cricket&nbsp;&nbsp;\r\n              <input type=\"radio\" name=\"answer3\" value=\"Football\" onChange={this.answered}/>Football&nbsp;&nbsp;\r\n              <input type=\"radio\" name=\"answer3\" value=\"Baseball\" onChange={this.answered}/>Baseball&nbsp;&nbsp;\r\n            </div>\r\n            \r\n            <input type=\"submit\" value=\"Submit\"></input>\r\n          \r\n          </form>\r\n        \r\n        </div>\r\n    \r\n    }else if(this.state.isSubmitted=== true){\r\n      \r\n      studentName = \r\n        \r\n        <div>\r\n          <h2>Thank you {this.state.name} for your valuable feedback. Please find your response below : </h2>\r\n          \r\n          <div className=\"card\">\r\n            <label id='label1'>What is your fvr8 color</label><br/>\r\n            <p>&#10004;  {this.state.answers.answer1}</p>\r\n          </div>\r\n          \r\n          <div className=\"card\">\r\n            <label id='label2'>What is your fvr8 car</label><br/>\r\n            <p>&#10004;  {this.state.answers.answer2}</p>\r\n          </div>\r\n          \r\n          <div className=\"card\"> \r\n            <label id='label3'>What is your fvr8 sports</label><br/>\r\n            <p>&#10004;  {this.state.answers.answer3}</p>\r\n          </div>\r\n        \r\n        </div>\r\n        \r\n        questions = <div></div>\r\n    }\r\n    return(\r\n      \r\n      <div>\r\n      \r\n        {studentName}\r\n        {questions}\r\n      \r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Survey;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Survey from './Survey'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n     <Survey />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}